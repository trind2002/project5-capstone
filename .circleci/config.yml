version: 2.1
jobs:
  lint:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: create virtualenv
          command: |
            make setup
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build-docker:
    docker:      
      - image: cimg/base:2022.06
    steps:
    # Checkout code from git
    - checkout
    - setup_remote_docker:
        version: 20.10.14
        docker_layer_caching: true
    - run:
        name: Build Docker Container
        command: |
          docker --version
          # Requested access to the resource
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          # Build image and add a descriptive tag
          docker build --tag=udacity .
          # Push image to a docker repository
          docker tag udacity trind7/udacity:v1.0
          docker push trind7/udacity:v1.0
    # Here's where you will add some code to rollback on failure      
  deployment:
    docker:      
      - image: cimg/base:2022.06
    steps:
    # Checkout code from git
    - checkout
    - setup_remote_docker:
        version: 20.10.14
        docker_layer_caching: true
    - run:
        name: Install kubectl 
        command: |
          curl -k -LO "https://dl.k8s.io/release/v1.24.7/bin/linux/amd64/kubectl"
          curl -k -LO "https://dl.k8s.io/v1.24.7/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - run:
        name: 'Display endpoint information about the master and services in the cluster.'
        command: |
          aws eks update-kubeconfig --name Capstone-project-EKS
          kubectl cluster-info
          kubectl get all -n kube-system
    # Here's where you will add some code to rollback on failure    
workflows:
  default:
    jobs:
      - lint
      - build-docker:
          requires: [lint]
      - deployment:
          requires: [build-docker]