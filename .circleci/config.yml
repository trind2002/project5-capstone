version: 2.1
jobs:
  lint:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: create virtualenv
          command: |
            make setup
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build-docker:
    docker:      
      # Docker image here that supports Ansible
      - image: python:3.7.3-stretch
      - checkout
      - setup_remote_docker:
            version: 20.10.14
            docker_layer_caching: true
    steps:
    # Checkout code from git
    - run:
        name: Build Docker Container
        command: |
          . venv/bin/activate  
          # Build image and add a descriptive tag
          export dockerpath="trind7"
          docker build --tag=udacity .
          # Push image to a docker repository
          docker tag udacity ${dockerpath}/udacity:v1.0
          docker push ${dockerpath}/udacity:v1.0
    # Here's where you will add some code to rollback on failure      
  deployment:
    docker:
      # Docker image here that supports AWS CLI
      - image: amazon/aws-cli
    steps:
    # Checkout code from git
    - run:
        name: Deployment
        command: |
          # Your code here
          echo 'EKS Cluster Success'
    # Here's where you will add some code to rollback on failure    
workflows:
  default:
    jobs:
      - lint
      - build-docker:
          requires: [lint]
      - deployment:
          requires: [build-docker]